<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BundleTypeMissingExceptionMessage" xml:space="preserve">
    <value>You must specify exactly one of: {0}.</value>
  </data>
  <data name="InvalidInputVersionExceptionMessageFormat" xml:space="preserve">
    <value>The specified version is not valid: "{0}".</value>
  </data>
  <data name="OperatingSystemNotSupportedExceptionMessage" xml:space="preserve">
    <value>This command is not supported on this operating system.</value>
  </data>
  <data name="ListCommandDescription" xml:space="preserve">
    <value>List .NET Core SDKs or Runtimes that can be removed with this tool.</value>
  </data>
  <data name="ListCommandRuntimeHeader" xml:space="preserve">
    <value>.NET Core Runtimes:</value>
  </data>
  <data name="ListCommandSdkHeader" xml:space="preserve">
    <value>.NET Core SDKs:</value>
  </data>
  <data name="OptionsConflictExceptionMessageFormat" xml:space="preserve">
    <value>You must specify only one of the options: {0}.</value>
  </data>
  <data name="RequiredArgMissingForUninstallCommandExceptionMessage" xml:space="preserve">
    <value>Required argument missing for the uninstall command.</value>
  </data>
  <data name="UninstallRuntimeOptionDescription" xml:space="preserve">
    <value>Remove .NET Core Runtimes only.</value>
  </data>
  <data name="UninstallSdkOptionDescription" xml:space="preserve">
    <value>Remove .NET Core SDKs only.</value>
  </data>
  <data name="SpecifiedVersionNotFoundExceptionMessageFormat" xml:space="preserve">
    <value>The specified version is not found: "{0}".</value>
  </data>
  <data name="UninstallAllBelowOptionArgumentName" xml:space="preserve">
    <value>VERSION</value>
  </data>
  <data name="UninstallAllBelowOptionDescription" xml:space="preserve">
    <value>Remove .NET Core SDKs or Runtimes below the specified version. The specified version will remain. (*)</value>
  </data>
  <data name="UninstallAllButLatestOptionDescription" xml:space="preserve">
    <value>Remove .NET Core SDKs or Runtimes, except the one highest version. (*)</value>
  </data>
  <data name="UninstallAllButOptionArgumentName" xml:space="preserve">
    <value>VERSIONS</value>
  </data>
  <data name="UninstallAllButOptionDescription" xml:space="preserve">
    <value>Remove .NET Core SDKs or Runtimes, except those specified. (*)</value>
  </data>
  <data name="UninstallAllLowerPatchesOptionDescription" xml:space="preserve">
    <value>Remove .NET Core SDKs or Runtimes superseded by higher patches. Protects global.json. (*)</value>
  </data>
  <data name="UninstallAllOptionDescription" xml:space="preserve">
    <value>Remove all .NET Core SDKs or Runtimes. (*)</value>
  </data>
  <data name="UninstallAllPreviewsButLatestOptionDescription" xml:space="preserve">
    <value>Remove .NET Core SDKs or Runtimes marked as previews, except the one highest preview. (*)</value>
  </data>
  <data name="UninstallAllPreviewsOptionDescription" xml:space="preserve">
    <value>Remove .NET Core SDKs or Runtimes marked as previews. (*)</value>
  </data>
  <data name="UninstallationFailedExceptionMessageFormat" xml:space="preserve">
    <value>Timeout during uninstall: {0}.</value>
  </data>
  <data name="UninstallationFailedExceptionWithExitCodeMessageFormat" xml:space="preserve">
    <value>The uninstallation operation failed. Exit code was {1} for "{0}".</value>
  </data>
  <data name="UninstallMajorMinorOptionArgumentName" xml:space="preserve">
    <value>MAJOR_MINOR</value>
  </data>
  <data name="UninstallMajorMinorOptionDescription" xml:space="preserve">
    <value>Remove .NET Core SDKs or Runtimes that match the specified `major.minor` version.</value>
  </data>
  <data name="UninstallNoOptionArgumentDescription" xml:space="preserve">
    <value>The specified version to uninstall. You may list several versions. Response files are supported.</value>
  </data>
  <data name="UninstallNoOptionArgumentName" xml:space="preserve">
    <value>VERSION</value>
  </data>
  <data name="UninstallNoOptionDescriptionWindows" xml:space="preserve">
    <value>Remove specified .NET Core SDKs or Runtimes. This tool can only uninstall items that were installed using Visual Studio, .NET Core SDK, or Runtime installers. By default, this tool does not uninstall versions that might be needed for Visual Studio. Read the documentation for the .NET Core Uninstall Tool at https://aka.ms/dotnet-core-uninstall-docs.</value>
  </data>
  <data name="VerbosityOptionArgumentName" xml:space="preserve">
    <value>LEVEL</value>
  </data>
  <data name="VerbosityOptionDescription" xml:space="preserve">
    <value>Set the verbosity level. Allowed values are q[uiet], m[inimal], n[ormal], d[etailed], and diag[nostic].</value>
  </data>
  <data name="UninstallX64OptionDescription" xml:space="preserve">
    <value>Can be used with --sdk, --runtime and --aspnet-runtime to remove x64.</value>
  </data>
  <data name="UninstallX86OptionDescription" xml:space="preserve">
    <value>Can be used with --sdk, --runtime and --aspnet-runtime to remove x86.</value>
  </data>
  <data name="NotAdminExceptionMessage" xml:space="preserve">
    <value>The current user does not have adequate privileges. See https://aka.ms/dotnet-core-uninstall-docs.</value>
  </data>
  <data name="MoreThanOneVersionSpecifiedExceptionMessageFormat" xml:space="preserve">
    <value>You must specify exactly one version for option: {0}.</value>
  </data>
  <data name="MoreThanZeroVersionSpecifiedExceptionMessageFormat" xml:space="preserve">
    <value>You cannot specify a version for option: {0}.</value>
  </data>
  <data name="VersionBeforeOptionExceptionMessageFormat" xml:space="preserve">
    <value>Do not use a version before an option: {0}.</value>
  </data>
  <data name="VerbosityLevelInvalidExceptionMessage" xml:space="preserve">
    <value>Allowed verbosity levels are q[uiet], m[inimal], n[ormal], d[etailed], and diag[nostic].</value>
  </data>
  <data name="UninstallNormalVerbosityFormat" xml:space="preserve">
    <value>Uninstalling: {0}.</value>
  </data>
  <data name="MacOsBundleDisplayNameFormat" xml:space="preserve">
    <value>Microsoft .NET Core {0} {1} (x64)</value>
  </data>
  <data name="CancelingMessage" xml:space="preserve">
    <value>Canceling: waiting for the current uninstall to complete.</value>
  </data>
  <data name="UninstallAspNetRuntimeOptionDescription" xml:space="preserve">
    <value>Remove ASP.NET Core Runtimes only.</value>
  </data>
  <data name="ListCommandAspNetRuntimeHeader" xml:space="preserve">
    <value>ASP.NET Core Runtimes:</value>
  </data>
  <data name="UninstallHostingBundleOptionDescription" xml:space="preserve">
    <value>Remove .NET Core Runtime &amp; Hosting Bundles only.</value>
  </data>
  <data name="ListCommandHostingBundleHeader" xml:space="preserve">
    <value>.NET Core Runtime &amp; Hosting Bundles:</value>
  </data>
  <data name="HostingBundleFootnoteFormat" xml:space="preserve">
    <value>"{0}" is treated as a version {1} in this tool.</value>
  </data>
  <data name="ListAspNetRuntimeOptionDescription" xml:space="preserve">
    <value>List ASP.NET Core Runtimes.</value>
  </data>
  <data name="ListHostingBundleOptionDescription" xml:space="preserve">
    <value>List .NET Core Runtime &amp; Hosting Bundles.</value>
  </data>
  <data name="ListRuntimeOptionDescription" xml:space="preserve">
    <value>List .NET Core Runtimes that can be uninstalled.</value>
  </data>
  <data name="ListSdkOptionDescription" xml:space="preserve">
    <value>List .NET Core SDKs that can be uninstalled.</value>
  </data>
  <data name="ListX64OptionDescription" xml:space="preserve">
    <value>List x64 .NET Core SDKs or Runtimes.</value>
  </data>
  <data name="ListX86OptionDescription" xml:space="preserve">
    <value>List x86 .NET Core SDKs or Runtimes.</value>
  </data>
  <data name="DryRunCommandDescription" xml:space="preserve">
    <value>Display .NET Core SDKs and Runtimes that will be removed.</value>
  </data>
  <data name="YesOptionDescription" xml:space="preserve">
    <value>Execute the command without requiring y/n confirmation.</value>
  </data>
  <data name="WindowsDryRunOutputFormat" xml:space="preserve">
    <value>*** DRY RUN OUTPUT
Specified versions:
{0}
*** END DRY RUN OUTPUT

To avoid breaking Visual Studio or other problems, read https://aka.ms/dotnet-core-uninstall-docs.

Run as administrator and use the remove command to uninstall these items.</value>
  </data>
  <data name="WindowsConfirmationPromptOutputFormat" xml:space="preserve">
    <value>The following items will be removed:
{0}

To avoid breaking Visual Studio or other problems, read https://aka.ms/dotnet-core-uninstall-docs.

Do you want to continue? [y/n] </value>
  </data>
  <data name="ConfirmationPromptInvalidExceptionMessage" xml:space="preserve">
    <value>Allowed values are "Y", "YES", and "N".</value>
  </data>
  <data name="RemoveCommandDescription" xml:space="preserve">
    <value>Remove the specified .NET Core SDKs or Runtimes.</value>
  </data>
  <data name="UninstallNotAllowedExceptionFormat" xml:space="preserve">
    <value>Uninstallation not allowed. This tool cannot uninstall .NET Core SDKs with version {0} or above.</value>
  </data>
  <data name="WindowsRequiredBundleConfirmationPromptOutputFormat" xml:space="preserve">
    <value>
{0}: {1}

Uninstalling this item will cause Visual Studio to break.

Are you sure you want to continue? [y/n] </value>
  </data>
  <data name="WindowsRequiredBundleConfirmationPromptWarningFormat" xml:space="preserve">
    <value>
Warning: {0}: {1}
Uninstalling this item will cause Visual Studio to break.
</value>
  </data>
  <data name="VersionOptionDescription" xml:space="preserve">
    <value>Display .NET Core Uninstall Tool version information.</value>
  </data>
  <data name="UpperLimitRequirement" xml:space="preserve">
    <value>Cannot uninstall version {0} and above</value>
  </data>
  <data name="WindowsRequirementExplanationString" xml:space="preserve">
    <value>Used by Visual Studio{0}. Specify individually or use —-force to remove</value>
  </data>
  <data name="ForceOptionDescriptionWindows" xml:space="preserve">
    <value>Force removal of versions that might be used by Visual Studio.</value>
  </data>
  <data name="ForceOptionDescriptionMac" xml:space="preserve">
    <value>Force removal of versions that might be used by Visual Studio for Mac or SDKs.</value>
  </data>
  <data name="WindowsListCommandOutput" xml:space="preserve">
    <value>
This tool cannot uninstall versions of the runtime or SDK that are 
    - SDKs installed using Visual Studio 2019 Update 3 or later.
    - SDKs and runtimes installed via zip/scripts.
    - Runtimes installed with SDKs (these should be removed by removing that SDK).
The versions that can be uninstalled with this tool are:
</value>
  </data>
  <data name="UninstallNoOptionDescriptionMac" xml:space="preserve">
    <value>Remove specified .NET Core SDKs or Runtimes. By default, this tool does not uninstall versions that might be needed for Visual Studio for Mac or SDKs. Read the documentation for the .NET Core Uninstall Tool at https://aka.ms/dotnet-core-uninstall-docs.</value>
  </data>
  <data name="MacRuntimeRequirementExplanationString" xml:space="preserve">
    <value>Used by Visual Studio for Mac or SDKs. Specify individually or use —-force to remove</value>
  </data>
  <data name="MacSDKRequirementExplanationString" xml:space="preserve">
    <value>Used by Visual Studio for Mac. Specify individually or use —-force to remove</value>
  </data>
  <data name="MacListCommandOutput" xml:space="preserve">
    <value>
This tool cannot uninstall versions of the runtime or SDK that are installed using zip/scripts. The versions that can be uninstalled with this tool are:
</value>
  </data>
  <data name="HelpExplanationParagraphMac" xml:space="preserve">
    <value>(*) By default, SDKs and Runtimes that have a high probability of being used by Visual Studio for Mac or SDKs are not removed. To remove these, specify them individually or use --force. If removing SDKs or Runtimes causes issues with your installation of Visual Studio for Mac, run “Repair”. SDKs and Runtimes are available for download at aka.ms/dotnet-core-download.</value>
  </data>
  <data name="HelpExplanationParagraphWindows" xml:space="preserve">
    <value>(*) By default, SDKs and Runtimes that have a high probability of being used by Visual Studio are not removed. To remove these, specify them individually or use --force. If removing SDKs or Runtimes causes issues with your installation of Visual Studio, run “Repair”. SDKs and Runtimes are available for download at aka.ms/dotnet-core-download.</value>
  </data>
  <data name="MacConfirmationPromptOutputFormat" xml:space="preserve">
    <value>The following items will be removed:
{0}

To avoid breaking Visual Studio for Mac or other problems, read https://aka.ms/dotnet-core-uninstall-docs.

Do you want to continue? [y/n] </value>
  </data>
  <data name="MacDryRunOutputFormat" xml:space="preserve">
    <value>*** DRY RUN OUTPUT
Specified versions:
{0}
*** END DRY RUN OUTPUT

To avoid breaking Visual Studio for Mac or other problems, read https://aka.ms/dotnet-core-uninstall-docs.

Run as administrator and use the remove command to uninstall these items.</value>
  </data>
  <data name="MacRequiredBundleConfirmationPromptOutputFormat" xml:space="preserve">
    <value>
{0}: {1}

Uninstalling this item will cause Visual Studio for Mac to break.

Are you sure you want to continue? [y/n] </value>
  </data>
  <data name="MacRequiredBundleConfirmationPromptWarningFormat" xml:space="preserve">
    <value>
Warning: {0}: {1}
Uninstalling this item will cause Visual Studio for to break.
</value>
  </data>
</root>
