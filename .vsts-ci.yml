variables:
  - name: _TeamName
    value: DotNetCore

# CI and PR triggers
trigger:
  batch: true
  branches:
    include:
    - master

pr:
  autoCancel: false
  branches:
    include:
    - '*'

jobs:
- template: /eng/common/templates/jobs/jobs.yml
  parameters:
    enableMicrobuild: true
    enablePublishBuildArtifacts: true
    enablePublishTestResults: true
    enableTelemetry: true
    helixRepo: dotnet/cli-lab
    timeoutInMinutes: 180 # increase timeout since BAR publishing might wait a long time
    jobs:
    - job: Windows
      pool:
        # For public or PR jobs, use the hosted pool.  For internal jobs use the internal pool.
        # Will eventually change this to two BYOC pools.
        ${{ if ne(variables['System.TeamProject'], 'internal') }}:
          name: NetCorePublic-Pool
          queue: BuildPool.Windows.10.Amd64.VS2019.Open
        ${{ if eq(variables['System.TeamProject'], 'internal') }}:
          name: NetCoreInternal-Pool
          queue: BuildPool.Windows.10.Amd64.VS2019
      variables:
      - name: _RID
        value: win-x86
      # Only enable publishing in official builds.
      - ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
        # Publish-Build-Assets provides: MaestroAccessToken, BotAccount-dotnet-maestro-bot-PAT
        - group: Publish-Build-Assets
        - name: _OfficialBuildArgs
          value: /p:DotNetSignType=$(_SignType)
                 /p:SignCoreDotnetCoreUninstall=true
                 /p:TeamName=$(_TeamName)
                 /p:DotNetPublishToBlobFeed=$(_DotNetPublishToBlobFeed)
                 /p:OfficialBuildId=$(BUILD.BUILDNUMBER)
      # else
      - ${{ if or(eq(variables['System.TeamProject'], 'public'), in(variables['Build.Reason'], 'PullRequest')) }}:
        - name: _OfficialBuildArgs
          value: ''
      strategy:
        matrix:
          ${{ if in(variables['Build.Reason'], 'PullRequest') }}:
            Debug:
              _BuildConfig: Debug
              _SignType: test
              _DotNetPublishToBlobFeed: false
              _BuildArgs:

          Release:
            _BuildConfig: Release
            # PRs or external builds are not signed.
            ${{ if or(eq(variables['System.TeamProject'], 'public'), in(variables['Build.Reason'], 'PullRequest')) }}:
              _SignType: test
              _DotNetPublishToBlobFeed: false
              _BuildArgs:
            ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
              _SignType: real
              _DotNetPublishToBlobFeed: false
              _BuildArgs: $(_OfficialBuildArgs)
      steps:
      - checkout: self
        clean: true
      - script: eng\common\cibuild.cmd
          -configuration $(_BuildConfig)
          -prepareMachine
          $(_BuildArgs)
          /p:RID=$(_RID)
        displayName: Build and Publish
      - task: CopyFiles@2
        condition: and(eq(variables['system.pullrequest.isfork'], false), eq(variables['_BuildConfig'], 'Release'))
        inputs:
          sourceFolder: 'artifacts/packages/$(_BuildConfig)/Shipping/'
          contents: '*.msi'
          targetFolder: '$(Build.ArtifactStagingDirectory)'
      - task: PublishBuildArtifacts@1
        condition: and(eq(variables['system.pullrequest.isfork'], false), eq(variables['_BuildConfig'], 'Release'))
        inputs:
          pathtoPublish: '$(Build.ArtifactStagingDirectory)'
          artifactName: 'drop-windows'
          publishLocation: 'Container'
          parallel: true

    - job: OSX_10_13
      displayName: 'OSX'
      pool:
        name: Hosted macOS
      strategy:
        matrix:
          ${{ if in(variables['Build.Reason'], 'PullRequest') }}:
            Debug:
              _BuildConfig: Debug
              _SignType: none
              _DotNetPublishToBlobFeed : false
          Release:
            _BuildConfig: Release
            _SignType: none
            _DotNetPublishToBlobFeed : false
      variables:
      - name: _RID
        value: osx-x64
      steps:
      - checkout: self
        clean: true
      - script: eng/common/cibuild.sh
          --configuration $(_BuildConfig)
          --prepareMachine
          /p:RID=$(_RID)
        displayName: Build
      - task: CopyFiles@2
        condition: and(eq(variables['system.pullrequest.isfork'], false), eq(variables['_BuildConfig'], 'Release'))
        inputs:
          sourceFolder: 'artifacts/layout/dotnet-core-uninstall/'
          contents: 'dotnet-core-uninstall'
          targetFolder: '$(Build.ArtifactStagingDirectory)'
      - task: PublishBuildArtifacts@1
        condition: and(eq(variables['system.pullrequest.isfork'], false), eq(variables['_BuildConfig'], 'Release'))
        inputs:
          pathtoPublish: '$(Build.ArtifactStagingDirectory)'
          artifactName: 'drop-osx'
          publishLocation: 'Container'
          parallel: true
